name: Build images

on:
  workflow_dispatch:
    inputs:
      chain:
        type: choice
        description: Who to greet
        required: true
        options:
          - all
          - python
          - r
          - inria_catalogue
  # schedule:
  # every day at midnight for test
  # - cron: "0 0 * * *"

  #schedule:
  #- cron: "0 10 * * *" # everyday at 10am
  #push:
  #  branches:
  #    - "**"
  #  tags:
  #    - "*"

  #pull_request:

jobs:
  base:
    if: ${{ inputs.chain == 'python' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: base
      context: base
      test: true
      push: true
      base_image: debian:stable-slim
      base_image_gpu: nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04
  python-minimal:
    if: ${{ inputs.chain == 'python' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    needs: [base]
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: python-minimal
      context: python-minimal
      test: false
      push: true
      base_image: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-base:latest
      base_image_gpu: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-base:latest-gpu
  python-datascience:
    if: ${{ inputs.chain == 'python' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    needs: [python-minimal]
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: python-datascience
      context: python-datascience
      test: false
      push: true
      base_image: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-minimal:latest
      base_image_gpu: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-minimal:latest-gpu
  jupyter-python:
    if: ${{ inputs.chain == 'python' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    needs: [python-datascience]
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: jupyter-python
      context: jupyter-python
      test: false
      push: true
      base_image: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-datascience:latest
      base_image_gpu: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-datascience:latest-gpu
  mlflow:
    if: ${{ inputs.chain == 'python' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    needs: [python-datascience]
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: mlflow
      context: mlflow
      test: false
      push: true
      base_image: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-datascience:latest
      base_image_gpu: registry.gitlab.inria.fr/sed-paris/mpp/containers/mpp-python-datascience:latest-gpu
  clinica-t1linear:
    if: ${{ inputs.chain == 'inria_catalogue' || inputs.chain == 'all'  }}
    secrets:
      GITLAB_REGISTRY_USERNAME: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
      GITLAB_REGISTRY_TOKEN: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
    #needs: [python-datascience]
    uses: ./.github/workflows/main-workflow-template.yml
    with:
      image: clinica-t1linear
      context: clinica-t1linear
      test: false
      push: true
      base_image: inseefrlab/onyxia-jupyter-python:latest
      base_image_gpu: inseefrlab/onyxia-jupyter-python:latest-gpu
